#!/bin/bash

# VHOST 1.2.0
# virtual host generator
# Joel Buchs - 2015
#-----------------------

#settings
dirUsrBin="/usr/lib/cgi-bin"
dirShareDoc="/usr/share/doc/"
vhostpath=''
symfDirName=''
symfRootDir="web"
drupalRootDir="web"
message=''
serverName=''
adminMail='support@bluesystem.ch'

#get user
currentUser= whoami 2>&1 >/dev/null
#get primary group
primaryGroup= id -ng $currentUser 2>&1 >/dev/null

#welcome
cat << "EOF"

 _  _  _  _   __   ____  ____         __         ____
/ )( \/ )( \ /  \ / ___)(_  _)       /  \       (___ \
\ \/ /) __ ((  O )\___ \  )(        (_/ /   _    / __/
 \__/ \_)(_/ \__/ (____/ (__)        (__)  (_)  (____)

	                                       BY JOEL BUCHS


EOF

printf "AVAILABLE COMMANDS\n\n vhost install\n vhost update\n\n vhost -symfony\n vhost -drupal [-notheme]\n\n "

#install function
function install {
	#delete if already installed
	if [ -f /usr/bin/vhost ]
	then
		sudo rm /usr/bin/vhost
	fi

	#copy script in the right directory
	sudo cp ./vhost /usr/bin/vhost

	#chmod the files
	sudo chmod a+x ./vhost /usr/bin/vhost

	printf "The programm will restart in a few seconds..."

	sleep 2

	clear

	sudo vhost
}

#update function
function update {
	#check if git is present
	if git --version 2>&1 >/dev/null
	then
		git pull origin master
		install
	else
		echo
		echo -e "\e[91myou need to have Git installed to make an update !"
	fi
}

#chown function
function chownIt () {

	chown -R $currentUser:$primaryGroup $1

}

#using ACL (cache/logs) for Symfony
function usingAcl () {

  rm -rf var/cache/* var/logs/* var/sessions/*

  HTTPDUSER=`ps axo user,comm | grep -E '[a]pache|[h]ttpd|[_]www|[w]ww-data|[n]ginx' | grep -v root | head -1 | cut -d\  -f1`
  sudo chmod -R +a "$HTTPDUSER allow delete,write,append,file_inherit,directory_inherit" var
  sudo chmod -R +a "`whoami` allow delete,write,append,file_inherit,directory_inherit" var
}

#install symfony
function installSymfony () {
	#check if symfony is present
	if symfony --version 2>&1 >/dev/null
	then
    sudo symfony self-update
		symfony new $1
	else
		echo
		echo -e "\e[91myou need to have symfony installed !"
	fi
}

#check for install
if [ "$1" = "install" ]
then
	install
fi


#check for update
if [ "$1" = "update" ]
then
	update
fi

#create new directory
echo
echo -e "\e[93mPlease enter the name of the new website : \e[39m"
read dirName
serverName=$dirName

#vhost variables
echo
echo -e "\e[93mServerName [local.$serverName.ch] : \e[39m"
read serverName
if [ -z "$serverName" ]
then
  serverName="local.$dirName.ch"
fi

echo
echo -e "\e[93mPlease enter the website administrator's email address [$adminMail] : \e[39m"
read serverAdmin
if [ -z "$serverAdmin" ]
then
  serverAdmin=$adminMail
fi


#check if project using symfony
if [ "$1" = "-symfony" ] || [ "$2" = "-symfony" ]
then
	symfDirName="$dirName/$symfRootDir"
	cd "/var/www/"
	installSymfony $dirName 2>&1 >/dev/null
	chownIt $dirName

	#using ACL (cache/logs)
	usingAcl

  #check if chmod+a is available, otherwise enable ACL with second method
  if [ $? -eq 0 ]; then
    echo "ACL properly installed with first method"
  else
    #adding repository and installing setfacl for ACL managment
    echo "installing setfacl for ACL managment"
    sudo add-apt-repository "deb http://cz.archive.ubuntu.com/ubuntu trusty main"
    sudo apt-get update
    sudo apt-get install acl

    HTTPDUSER=`ps axo user,comm | grep -E '[a]pache|[h]ttpd|[_]www|[w]ww-data|[n]ginx' | grep -v root | head -1 | cut -d\  -f1`
    sudo setfacl -R -m u:"$HTTPDUSER":rwX -m u:`whoami`:rwX /var/www
    sudo setfacl -dR -m u:"$HTTPDUSER":rwX -m u:`whoami`:rwX /var/www

    if [ $? -eq 0 ]; then
      echo "ACL properly installed with second method"
    else

      HTTPDUSER=`ps axo user,comm | grep -E '[a]pache|[h]ttpd|[_]www|[w]ww-data|[n]ginx' | grep -v root | head -1 | cut -d\  -f1`
      sudo setfacl -R -m -n u:"$HTTPDUSER":rwX -m u:`whoami`:rwX /var/www
      sudo setfacl -dR -m -n u:"$HTTPDUSER":rwX -m u:`whoami`:rwX /var/www

      if [ $? -eq 0 ]; then
        echo "ACL properly installed with third method"
      else
        echo -e "\e[93mWarning : unable to install ACL\e[39m"

        chownIt "$symfDirName/"
      fi
    fi
  fi

	echo
	echo -e "\e[39minstalling Symfony 2..."
	message="/app_dev.php"

elif [ "$1" = "-drupal" ] || [ "$2" = "-drupal" ]
then
  #installing nodejs/gulp/foundation/php gd
  sudo npm install n -g
  sudo n stable
  sudo npm install -g gulp
  sudo npm install --global foundation-cli
  sudo apt-get install php5-gd

  #installing composer if not installed
	if composer --version 2>&1 >/dev/null
	then
    echo "Composer detected"
    sudo composer self-update
	else
    curl -sS https://getcomposer.org/installer | php
    sudo mv composer.phar /usr/local/bin/composer
    sudo chown $currentUser:$primaryGroup /usr/local/bin/composer
	fi

  #installing curl if not installed
	if curl --version 2>&1 >/dev/null
	then
    echo "Curl detected"
	else
    sudo apt-get install php5-curl
    echo "Curl was successfully installed"
	fi

  #Drupal installation
  cd /var/www
  mkdir $dirName
  cd /var/www/$dirName
  if [ "$2" -ne "-notheme" ] || [ "$3" -ne "-notheme" ]
  then
    git clone https://bluesys@bitbucket.org/bluesys/bs-drupal8.ch.git ./
    sudo composer update
    cd web/sites/default
    rm settings.php
    cp default.settings.php settings.php
    chmod 0777 settings.php
    mkdir files
    chmod 0777 files

    #Base custom theme installation
    cd /var/www/$dirName/web/themes/bluesys01
    npm install gulp
    npm install gulp-load-plugins
    npm install gulp-sass
    npm install gulp-autoprefixer

    foundation update
    foundation watch

    symfDirName="$dirName/$drupalRootDir"
  else
    git clone https://github.com/drupal/drupal.git ./
    sudo composer update

    symfDirName=$dirName
  fi

  sudo composer update

else
	symfDirName=$dirName
	echo
	echo -e "\e[39mroot directory creation..."
	mkdir "/var/www/$dirName"
	cd "/var/www/"
	chownIt $dirName
	sudo touch "/var/www/$dirName/index.html"
  sudo chmod 777 "/var/www/$dirName/index.html"


	echo "<h1>It works!!!</h1><p>Site successfully initialized! This file is located in <b>/var/www/$dirName</b></p>" > "/var/www/$dirName/index.html"

fi

#create vhost file
vhostpath="/etc/apache2/sites-available/$dirName.conf"
sudo touch $vhostpath

echo
echo -e "\e[39mcreating the virtual host..."

sudo chmod 644 $vhostpath

#virtual host generation
sudo sh -c 'cat <<EOF >> '$vhostpath'
<VirtualHost *:80>
	ServerAdmin '$serverAdmin'
	ServerName '$serverName'

	DocumentRoot /var/www/'$symfDirName'
	<Directory />
		Options FollowSymLinks
		AllowOverride All
	</Directory>
	<Directory /var/www/'$symfDirName'>
		Options Indexes FollowSymLinks MultiViews
		AllowOverride All
		Order allow,deny
		allow from all
	</Directory>

	ScriptAlias /cgi-bin/ /usr/lib/cgi-bin/
	<Directory '$dirUsrBin'>
		AllowOverride None
		Options +ExecCGI -MultiViews +SymLinksIfOwnerMatch
		Order allow,deny
		Allow from all
	</Directory>

	ErrorLog /var/log/apache2/error.log

	LogLevel warn

	CustomLog /var/log/apache2/access.log combined

    Alias /doc/ '$dirShareDoc'
    <Directory '$dirShareDoc'>
        Options Indexes MultiViews FollowSymLinks
        AllowOverride None
        Order deny,allow
        Deny from all
        Allow from 127.0.0.0/255.0.0.0 ::1/128
    </Directory>

</VirtualHost>
EOF'


echo
echo -e "\e[39mwebsite activation..."
sudo a2ensite $dirName.conf 2>&1 >/dev/null

echo
echo -e "\e[39madding an entry to the host file..."
sudo sed -i '1s/^/127.0.0.1 \t'"$serverName"'\n/' /etc/hosts

echo
echo -e "\e[39mrestarting Apache..."
sudo /etc/init.d/apache2 reload

echo
echo -e "\e[32mFinished ! Your website is available at this address: \e[39m"
echo -e "\e[44m$serverName$message\e[39m\e[49m"
echo
