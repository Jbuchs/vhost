#!/bin/bash

# VHOST 1.1.2
# virtual host generator
# Joel Buchs - 2014
#-----------------------

#some usefull variables
dirUsrBin="/usr/lib/cgi-bin"
dirShareDoc="/usr/share/doc/"
vhostpath=''
symfDirName=''
symfRootDir="web"
message=''

#welcome
cat << "EOF"

        _                  _     __      __  
       | |                | |   /  |    /  | 
__   __| |__    ___   ___ | |_  `| |    `| | 
\ \ / /| '_ \  / _ \ / __|| __|  | |     | | 
 \ V / | | | || (_) |\__ \| |_  _| |_ _ _| |_
  \_/  |_| |_| \___/ |___/ \__| \___/(_)\___/

				BY JOEL BUCHS                                         	
   
 
EOF

printf "AVAILABLE COMMANDS\n\n vhost install\n vhost update\n\n vhost -symfony\n\n "

#install function
function install {
	#delete if already installed
	if [ -f /usr/bin/vhost ]
	then
		sudo rm /usr/bin/vhost
	fi

	#copy script in the right directory
	sudo cp ./vhost /usr/bin/vhost

	#chmod the files
	sudo chmod a+x ./vhost /usr/bin/vhost

	printf "The programm will restart in a few seconds..."

	sleep 2

	clear

	sudo vhost
}

#update function
function update {
	#check if git is present
	if git --version 2>&1 >/dev/null
	then
		git pull origin master
		install
	else
		echo
		echo -e "\e[91myou need to have Git installed to make an update !"
	fi
}

#chown function
function chownIt () {
	
	#get user
	currentUser= whoami 2>&1 >/dev/null
	#get primary group
	primaryGroup= id -ng $currentUser 2>&1 >/dev/null
	chown -R $currentUser:$primaryGroup $1

}

#install symfony
function installSymfony () {
	#check if symfony is present
	if symfony --version 2>&1 >/dev/null
	then
		symfony new $1
	else
		echo
		echo -e "\e[91myou need to have symfony installed !"
	fi
}

#check for install
if [ "$1" = "install" ] 
then
	install
fi


#check for update
if [ "$1" = "update" ] 
then
	update
fi

#create new directory
echo
echo -e "\e[93mPlease enter the name of the new website : \e[39m"
read dirName

#check if project using symfony
if [ "$1" = "-symfony" ] || [ "$2" = "-symfony" ]
then
	symfDirName="$dirName/$symfRootDir"
	cd "/var/www/"
	installSymfony $dirName 2>&1 >/dev/null
	chownIt $dirName
	#cache directories enabling
	sudo chmod -R 777 "$dirName/app/cache"
	sudo chmod -R 777 "$dirName/app/logs"

	echo
	echo -e "\e[39minstalling Symfony 2..."
	echo
	echo "symfony has been successfully installed"
	message="/app_dev.php"
else
	symfDirName=$dirName
	echo
	echo -e "\e[39mroot directory creation..."
	sudo mkdir "/var/www/$dirName"
	cd "/var/www/"
	chownIt $dirName
	sudo touch "/var/www/$dirName/index.html"
	sudo chmod 777 "/var/www/$dirName/index.html"

	echo "<h1>It works !!!</h1><p>Site successfully initialized! This file is located in <b>/var/www/$dirName</b></p>" > "/var/www/$dirName/index.html"

fi

#create vhost file
vhostpath="/etc/apache2/sites-available/$dirName.conf"
sudo touch $vhostpath

#vhost variables
echo
echo -e "\e[93mServerName (for instance : local.mysite.ch) : \e[39m"
read serverName


echo
echo -e "\e[93mPlease enter the website administrator's email address : \e[39m"
read serverAdmin

echo
echo -e "\e[39mcreating the virtual host..."

sudo chmod 644 $vhostpath

#virtual host generation
sudo sh -c 'cat <<EOF >> '$vhostpath'
<VirtualHost *:80>
	ServerAdmin '$serverAdmin'
	ServerName '$serverName'

	DocumentRoot /var/www/'$symfDirName'
	<Directory />
		Options FollowSymLinks
		AllowOverride All
	</Directory>
	<Directory /var/www/'$symfDirName'>
		Options Indexes FollowSymLinks MultiViews
		AllowOverride All
		Order allow,deny
		allow from all
	</Directory>

	ScriptAlias /cgi-bin/ /usr/lib/cgi-bin/
	<Directory '$dirUsrBin'>
		AllowOverride None
		Options +ExecCGI -MultiViews +SymLinksIfOwnerMatch
		Order allow,deny
		Allow from all
	</Directory>

	ErrorLog /var/log/apache2/error.log

	LogLevel warn

	CustomLog /var/log/apache2/access.log combined

    Alias /doc/ '$dirShareDoc'
    <Directory '$dirShareDoc'>
        Options Indexes MultiViews FollowSymLinks
        AllowOverride None
        Order deny,allow
        Deny from all
        Allow from 127.0.0.0/255.0.0.0 ::1/128
    </Directory>

</VirtualHost>
EOF'


echo
echo -e "\e[39mwebsite activation..."
sudo a2ensite $dirName.conf

echo
echo -e "\e[39madding an entry to the host file..."
sudo sed -i '1s/^/127.0.0.1 \t'"$serverName"'\n/' /etc/hosts

echo
echo -e "\e[39mrestarting Apache..."
sudo /etc/init.d/apache2 reload

echo
echo -e "\e[32mFinished ! Your website is available at this address: \e[39m"
echo -e "\e[44m$serverName$message\e[39m\e[49m"
